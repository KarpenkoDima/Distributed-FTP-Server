# nginx-ftp-proxe.conf - Enchanced FTP Proxy Configuration
events{
    worker_connections 1024;
    use epoll # optimithation for Linux environment
}

stream {
    # Логирование для диагностики - важно для понимания потока трафика
    log_format ftp_format '$remote_addr [$time_local] '
                          '$protocol $status $bytes_sent $bytes_received '
                          '$session_time "$upstream_addr"';

    access_log /var/log/nginx/ftp_access.log ftp_format;
    error_log /var/log/nginx/ftp_error.log warn;

    # Upstream for FTP Control Connection
    # Здесь мы определяем пул сереверов для управляющих соединений
    upstream ftp_control_backend {
        # Используем ip_hash для sticky session - важно для FTP
        # Это гарантирует, что один клиент всегда попадает на тот же сервер
        ip_hash;

        server ftp-server-1:2121 max fails=3 fail_timeout=30s;
        server ftp-server-2:2122 max fails=3 fail_timeout=30s;
        server ftp-server-3:2123 max fails=3 fail_timeout=30s;
    }

    # Upstream for FTP Data Connections
    # Это более сложная часть - нам нужно направлять data connections 
    # на тот жк серевр, который обрабатывает control connection
    upstream ftp_data_backend {
        # используем тот же метод балансировки для консистентности
        ip_hash;

        server ftp-server-1:50000-50010 max fails=1 fail_timeout=10s;
        server ftp-server-2:50000-50010 max fails=1 fail_timeout=10s;
        server ftp-server-3:50000-50010 max fails=1 fail_timeout=10s;
    }

    # FTP Control Connection Proxy (порт 21)
    server {
        listen 21;
        proxy_pass ftp_control_backend;

        # Настройка для FTP протокола
        proxy_timeout 300s;          # FTP сессии могут біть долгими
        proxy_connection_timeout 5s; # Быстрое подключение к backend
        proxy_responses 1;           # FTP ожидает 1 ответ на команду

        # Сохраняем иформацию о клиенте для backend серверов
        proxy_bind $remote_addr transport;
    }

    # FTP data Connection Proxy (диапазон портов)
    # Это инновационная часть - проксируем целый диапазон портов
    server {
        listen 50000-50010;
        proxy_pass ftp_data_backend;

        
        proxy_timeout 60s;
        proxy_connect_timeout 3s;
        proxY_upload_rate 0;            # без ограничений скорости
        proxy_download_rate 0;
    }
}
